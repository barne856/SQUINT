squint - C++ Dimensional Analysis and Tensor Library

include/squint/
├── core.hpp: Core types and utilities
├── dimension.hpp: Dimension system and units
│   ├── struct dimension<L, M, T, I, Θ, N, J>: Represents physical dimensions
│   └── using dimensions: Predefined dimension types (length, mass, time, etc.)
├── quantity.hpp: Dimensional quantities
│   └── template <typename T, typename D, error_checking E = error_checking::disabled> class quantity
│       ├── Constructors, assignment operators
│       ├── Arithmetic operations (+, -, *, /, %)
│       ├── Comparison operations (==, !=, <, <=, >, >=)
│       └── Utility methods (value(), dimensions(), etc.)
├── tensor.hpp: Main tensor interface
│   └── template <typename T, typename... Dims> class tensor
├── fixed_tensor.hpp: Fixed-size tensor implementation
│   └── template <typename T, layout L, error_checking E, size_t... Dims> class fixed_tensor : public tensor<T, Dims...>
├── dynamic_tensor.hpp: Dynamic-size tensor implementation
│   └── template <typename T, error_checking E = error_checking::disabled> class dynamic_tensor : public tensor<T>
├── tensor_base.hpp: Base class for tensor implementations
├── tensor_view.hpp: Non-owning view of tensor data
├── iterable_tensor.hpp: Tensor iteration utilities
├── geometry.hpp: Geometric operations and types
└── linear_algebra.hpp: Linear algebra operations

Key Features:
- Compile-time dimensional analysis
- Fixed and dynamic size tensors
- Error checking options (enabled/disabled)
- Quantity operations with automatic dimension handling
- Tensor operations (element-wise arithmetic, matrix multiplication, etc.)
- Geometric and linear algebra utilities

Tests:
tests/
├── dimension_tests.cpp
├── geometry_tests.cpp
├── linalg_tests.cpp
├── quantity_tests.cpp
└── tensor_tests.cpp

Build and Utility:
├── CMakeLists.txt: CMake build configuration
├── compile.py: Utility script for file operations and token counting
└── README.md: Project documentation
